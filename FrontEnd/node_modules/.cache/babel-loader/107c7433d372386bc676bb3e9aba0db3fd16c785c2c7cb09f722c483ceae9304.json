{"ast":null,"code":"var _jsxFileName = \"/Users/edingschool/Documents/PrescriptionMinter/FrontEnd/src/components/deleteform.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n//This component will enabling deletion of patients within the database.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Deleteform() {\n  _s();\n  const [form, setForm] = useState({\n    patientIDSeed: \"\"\n  });\n  function updateForm(value) {\n    return setForm(prev => {\n      return {\n        ...prev,\n        ...value\n      };\n    });\n  }\n  async function onSubmit(e) {\n    e.preventDefault();\n    const toBeDeleted = {\n      ...form\n    };\n    //Currently only works on localhost\n    await fetch(\"http://localhost:8000/routing/:id\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(toBeDeleted)\n    }).catch(error => {\n      window.alert(error);\n      return;\n    });\n    setForm({\n      patientIDSeed: \"\"\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-2xl mx-auto bg-white p-16\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"patient_id_seed\",\n            className: \"block mb-2 text-sm font-medium text-gray-600 dark:text-gray-300\",\n            children: \"Input the ID you want to delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"patient_id_seed\",\n            className: \"bg-gray-500 border border-gray-300 text-gray-600 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\",\n            placeholder: \"ID\",\n            value: form.patientIDSeed,\n            onChange: e => updateForm({\n              patientIDSeed: e.target.value\n            }),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"py-2 px-4  bg-lightBlue hover:bg-brightBlue focus:ring-indigo-500 focus:ring-offset-indigo-200 text-white w-full transition ease-in duration-200 text-center text-base font-semibold shadow-md focus:outline-none focus:ring-2 focus:ring-offset-2  rounded-lg \",\n          children: \"Delete!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Deleteform, \"dlRNWnEcMT8tXBrZnIRUXH0zYrI=\");\n_c = Deleteform;\nvar _c;\n$RefreshReg$(_c, \"Deleteform\");","map":{"version":3,"names":["React","useState","Deleteform","form","setForm","patientIDSeed","updateForm","value","prev","onSubmit","e","preventDefault","toBeDeleted","fetch","method","headers","body","JSON","stringify","catch","error","window","alert","target"],"sources":["/Users/edingschool/Documents/PrescriptionMinter/FrontEnd/src/components/deleteform.jsx"],"sourcesContent":["import React,{useState} from 'react';\n//This component will enabling deletion of patients within the database.\nexport default function Deleteform() {\n  const [form, setForm] = useState({\n    patientIDSeed:\"\",\n  });\n\n  function updateForm(value) {\n    return setForm((prev) => {\n      return { ...prev, ...value };\n    });\n  }\n\n  async function onSubmit(e) {\n    e.preventDefault();\n  \n    const toBeDeleted = { ...form };\n    //Currently only works on localhost\n    await fetch(\"http://localhost:8000/routing/:id\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(toBeDeleted),\n    })\n    .catch(error => {\n      window.alert(error);\n      return;\n    });\n  \n    setForm({\n        patientIDSeed:\"\",\n    });\n  }\n\n    return (\n      <>\n      <div className=\"max-w-2xl mx-auto bg-white p-16\"> \n        <form onSubmit={onSubmit}>\n            <div>\n                <label htmlFor=\"patient_id_seed\" className=\"block mb-2 text-sm font-medium text-gray-600 dark:text-gray-300\">Input the ID you want to delete</label>\n                <input type=\"text\" id=\"patient_id_seed\" className=\"bg-gray-500 border border-gray-300 text-gray-600 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\" placeholder=\"ID\" value = {form.patientIDSeed} onChange={(e) => updateForm({ patientIDSeed: e.target.value })} required />\n            </div>\n            <button type=\"submit\" className=\"py-2 px-4  bg-lightBlue hover:bg-brightBlue focus:ring-indigo-500 focus:ring-offset-indigo-200 text-white w-full transition ease-in duration-200 text-center text-base font-semibold shadow-md focus:outline-none focus:ring-2 focus:ring-offset-2  rounded-lg \">\n                Delete!\n            </button>\n        </form>\n      </div>\n      </>\n    );\n  }"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC;AAAA;AAAA;AACA,eAAe,SAASC,UAAU,GAAG;EAAA;EACnC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGH,QAAQ,CAAC;IAC/BI,aAAa,EAAC;EAChB,CAAC,CAAC;EAEF,SAASC,UAAU,CAACC,KAAK,EAAE;IACzB,OAAOH,OAAO,CAAEI,IAAI,IAAK;MACvB,OAAO;QAAE,GAAGA,IAAI;QAAE,GAAGD;MAAM,CAAC;IAC9B,CAAC,CAAC;EACJ;EAEA,eAAeE,QAAQ,CAACC,CAAC,EAAE;IACzBA,CAAC,CAACC,cAAc,EAAE;IAElB,MAAMC,WAAW,GAAG;MAAE,GAAGT;IAAK,CAAC;IAC/B;IACA,MAAMU,KAAK,CAAC,mCAAmC,EAAE;MAC/CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,WAAW;IAClC,CAAC,CAAC,CACDO,KAAK,CAACC,KAAK,IAAI;MACdC,MAAM,CAACC,KAAK,CAACF,KAAK,CAAC;MACnB;IACF,CAAC,CAAC;IAEFhB,OAAO,CAAC;MACJC,aAAa,EAAC;IAClB,CAAC,CAAC;EACJ;EAEE,oBACE;IAAA,uBACA;MAAK,SAAS,EAAC,iCAAiC;MAAA,uBAC9C;QAAM,QAAQ,EAAEI,QAAS;QAAA,wBACrB;UAAA,wBACI;YAAO,OAAO,EAAC,iBAAiB;YAAC,SAAS,EAAC,iEAAiE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAwC,eACpJ;YAAO,IAAI,EAAC,MAAM;YAAC,EAAE,EAAC,iBAAiB;YAAC,SAAS,EAAC,sQAAsQ;YAAC,WAAW,EAAC,IAAI;YAAC,KAAK,EAAIN,IAAI,CAACE,aAAc;YAAC,QAAQ,EAAGK,CAAC,IAAKJ,UAAU,CAAC;cAAED,aAAa,EAAEK,CAAC,CAACa,MAAM,CAAChB;YAAM,CAAC,CAAE;YAAC,QAAQ;UAAA;YAAA;YAAA;YAAA;UAAA,QAAG;QAAA;UAAA;UAAA;UAAA;QAAA,QAChb,eACN;UAAQ,IAAI,EAAC,QAAQ;UAAC,SAAS,EAAC,iQAAiQ;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAExR;MAAA;QAAA;QAAA;QAAA;MAAA;IACN;MAAA;MAAA;MAAA;IAAA;EACH,iBACH;AAEP;AAAC,GAhDqBL,UAAU;AAAA,KAAVA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}